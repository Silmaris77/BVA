# To wklej do business_games.py zamiast linii 733-808

            if input_method == "🎤 Mów":
                st.markdown("**Nagraj swoje rozwiązanie** (naciśnij przycisk i zacznij mówić):")
                
                # Inicjalizuj klucze session_state
                transcription_key = f"transcription_{contract['id']}"
                transcription_version_key = f"transcription_version_{contract['id']}"
                if transcription_key not in st.session_state:
                    st.session_state[transcription_key] = ""
                if transcription_version_key not in st.session_state:
                    st.session_state[transcription_version_key] = 0
                
                audio_data = st.audio_input(
                    "🎤 Nagrywanie...",
                    key=f"audio_input_{contract['id']}"
                )
                
                if audio_data is not None:
                    import speech_recognition as sr
                    import tempfile
                    import os
                    from pydub import AudioSegment
                    
                    with st.spinner("🤖 Rozpoznaję mowę..."):
                        try:
                            with tempfile.NamedTemporaryFile(delete=False, suffix=".wav") as tmp_file:
                                tmp_file.write(audio_data.getvalue())
                                tmp_path = tmp_file.name
                            
                            wav_path = None
                            try:
                                audio = AudioSegment.from_file(tmp_path)
                                wav_path = tmp_path.replace(".wav", "_converted.wav")
                                audio.export(wav_path, format="wav")
                                
                                recognizer = sr.Recognizer()
                                with sr.AudioFile(wav_path) as source:
                                    audio_data_sr = recognizer.record(source)
                                    
                                transcription = recognizer.recognize_google(audio_data_sr, language="pl-PL")
                                
                                # Zapisz i zwiększ wersję
                                st.session_state[transcription_key] = transcription
                                st.session_state[transcription_version_key] += 1
                                
                                st.success("✅ Transkrypcja zakończona! Tekst pojawił się w polu poniżej.")
                                
                            except sr.UnknownValueError:
                                st.error("❌ Nie udało się rozpoznać mowy. Spróbuj ponownie lub mów wyraźniej.")
                            except sr.RequestError as e:
                                st.error(f"❌ Błąd połączenia z usługą rozpoznawania mowy: {str(e)}")
                            finally:
                                if os.path.exists(tmp_path):
                                    os.unlink(tmp_path)
                                if wav_path and os.path.exists(wav_path):
                                    os.unlink(wav_path)
                                
                        except Exception as e:
                            st.error(f"❌ Błąd podczas transkrypcji: {str(e)}")
                            st.info("Możesz użyć opcji '✍️ Pisz' aby wprowadzić tekst ręcznie.")
                
                # Dynamiczny klucz który zmienia się po transkrypcji
                text_area_key = f"{solution_key}_v{st.session_state[transcription_version_key]}"
                current_text = st.session_state.get(transcription_key, contract.get("solution", ""))
                
                solution = st.text_area(
                    "📝 Edytuj transkrypcję (możesz poprawić lub uzupełnić):",
                    value=current_text,
                    height=400,
                    key=text_area_key,
                    placeholder="Transkrypcja pojawi się tutaj po nagraniu..."
                )
