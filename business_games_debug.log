[2025-10-19 01:55:37] ============================================================
[2025-10-19 01:55:37] evaluate_contract_solution() wywołane
[2025-10-19 01:55:37] get_active_evaluation_mode() wywołane
[2025-10-19 01:55:37] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 01:55:37] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 01:55:37] Plik config/business_games_active_mode.json istnieje
[2025-10-19 01:55:37] Z pliku odczytano tryb: 'ai'
[2025-10-19 01:55:37] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 01:55:37] Używam trybu oceny: 'ai'
[2025-10-19 01:59:45] ============================================================
[2025-10-19 01:59:45] evaluate_contract_solution() wywołane
[2025-10-19 01:59:45] get_active_evaluation_mode() wywołane
[2025-10-19 01:59:45] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 01:59:45] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 01:59:45] Plik config/business_games_active_mode.json istnieje
[2025-10-19 01:59:45] Z pliku odczytano tryb: 'ai'
[2025-10-19 01:59:45] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 01:59:45] Używam trybu oceny: 'ai'
[2025-10-19 01:59:45] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 01:59:45] Importuję google.generativeai...
[2025-10-19 01:59:45] ✅ Import google.generativeai OK
[2025-10-19 01:59:45] Przygotowuję prompt...
[2025-10-19 01:59:45] ✅ Prompt przygotowany (długość: 11560 znaków)
[2025-10-19 01:59:45] Pobieram API key...
[2025-10-19 01:59:45] ✅ API key pobrane z st.secrets
[2025-10-19 01:59:45] Konfiguruję genai.configure()...
[2025-10-19 01:59:45] ✅ genai.configure() OK
[2025-10-19 01:59:45] Ustawiam safety_settings...
[2025-10-19 01:59:45] ✅ safety_settings ustawione
[2025-10-19 01:59:45] Tworzę model: gemini-2.5-flash...
[2025-10-19 01:59:45] ✅ Model utworzony
[2025-10-19 01:59:45] Wywołuję model.generate_content()...
[2025-10-19 01:59:47] ============================================================
[2025-10-19 01:59:47] evaluate_contract_solution() wywołane
[2025-10-19 01:59:47] get_active_evaluation_mode() wywołane
[2025-10-19 01:59:47] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 01:59:47] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 01:59:47] Plik config/business_games_active_mode.json istnieje
[2025-10-19 01:59:47] Z pliku odczytano tryb: 'ai'
[2025-10-19 01:59:47] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 01:59:47] Używam trybu oceny: 'ai'
[2025-10-19 01:59:47] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 01:59:47] Importuję google.generativeai...
[2025-10-19 01:59:47] ✅ Import google.generativeai OK
[2025-10-19 01:59:47] Przygotowuję prompt...
[2025-10-19 01:59:47] ✅ Prompt przygotowany (długość: 11560 znaków)
[2025-10-19 01:59:47] Pobieram API key...
[2025-10-19 01:59:47] ✅ API key pobrane z st.secrets
[2025-10-19 01:59:47] Konfiguruję genai.configure()...
[2025-10-19 01:59:47] ✅ genai.configure() OK
[2025-10-19 01:59:47] Ustawiam safety_settings...
[2025-10-19 01:59:47] ✅ safety_settings ustawione
[2025-10-19 01:59:47] Tworzę model: gemini-2.5-flash...
[2025-10-19 01:59:47] ✅ Model utworzony
[2025-10-19 01:59:47] Wywołuję model.generate_content()...
[2025-10-19 01:59:49] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 01:59:50] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 01:59:53] ❌ JSONDecodeError: Expecting ',' delimiter: line 6 column 81 (char 313)
[2025-10-19 01:59:53] Odpowiedź Gemini: {
  "total_score": 0,
  "rating": 1,
  "feedback": "Przesłane rozwiązanie to logi systemowe, a nie merytoryczna odpowiedź na kontrakt. Brakuje jakiejkolwiek treści odnoszącej się do problemu komunikacji w zespole.",
  "strengths": [
    "Brak merytorycznych mocnych stron, ponieważ nie przedstawiono rozwiązania."
[2025-10-19 01:59:53] Fallback do heurystyki (JSONDecodeError)
[2025-10-19 02:03:21] ============================================================
[2025-10-19 02:03:21] evaluate_contract_solution() wywołane
[2025-10-19 02:03:21] get_active_evaluation_mode() wywołane
[2025-10-19 02:03:21] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 02:03:21] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 02:03:21] Plik config/business_games_active_mode.json istnieje
[2025-10-19 02:03:21] Z pliku odczytano tryb: 'ai'
[2025-10-19 02:03:21] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 02:03:21] Używam trybu oceny: 'ai'
[2025-10-19 02:03:21] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 02:03:21] Importuję google.generativeai...
[2025-10-19 02:03:21] ✅ Import google.generativeai OK
[2025-10-19 02:03:21] Przygotowuję prompt...
[2025-10-19 02:03:21] ✅ Prompt przygotowany (długość: 73685 znaków)
[2025-10-19 02:03:21] Pobieram API key...
[2025-10-19 02:03:21] ✅ API key pobrane z st.secrets
[2025-10-19 02:03:21] Konfiguruję genai.configure()...
[2025-10-19 02:03:21] ✅ genai.configure() OK
[2025-10-19 02:03:21] Ustawiam safety_settings...
[2025-10-19 02:03:21] ✅ safety_settings ustawione
[2025-10-19 02:03:21] Tworzę model: gemini-2.5-flash...
[2025-10-19 02:03:21] ✅ Model utworzony
[2025-10-19 02:03:21] Wywołuję model.generate_content()...
[2025-10-19 02:03:24] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 02:03:24] Długość odpowiedzi: 724 znaków
[2025-10-19 02:03:24] ✅ JSON sparsowany pomyślnie
[2025-10-19 02:08:31] ============================================================
[2025-10-19 02:08:31] evaluate_contract_solution() wywołane
[2025-10-19 02:08:31] get_active_evaluation_mode() wywołane
[2025-10-19 02:08:31] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 02:08:31] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 02:08:31] Plik config/business_games_active_mode.json istnieje
[2025-10-19 02:08:31] Z pliku odczytano tryb: 'ai'
[2025-10-19 02:08:31] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 02:08:31] Używam trybu oceny: 'ai'
[2025-10-19 02:08:31] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 02:08:31] Importuję google.generativeai...
[2025-10-19 02:08:31] ✅ Import google.generativeai OK
[2025-10-19 02:08:31] Przygotowuję prompt...
[2025-10-19 02:08:31] ✅ Prompt przygotowany (długość: 3824 znaków)
[2025-10-19 02:08:31] Pobieram API key...
[2025-10-19 02:08:31] ✅ API key pobrane z st.secrets
[2025-10-19 02:08:31] Konfiguruję genai.configure()...
[2025-10-19 02:08:31] ✅ genai.configure() OK
[2025-10-19 02:08:31] Ustawiam safety_settings...
[2025-10-19 02:08:31] ✅ safety_settings ustawione
[2025-10-19 02:08:31] Tworzę model: gemini-2.5-flash...
[2025-10-19 02:08:31] ✅ Model utworzony
[2025-10-19 02:08:31] Wywołuję model.generate_content()...
[2025-10-19 02:08:39] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 02:08:39] Długość odpowiedzi: 832 znaków
[2025-10-19 02:08:39] ✅ JSON sparsowany pomyślnie
[2025-10-19 02:16:51] ============================================================
[2025-10-19 02:16:51] evaluate_contract_solution() wywołane
[2025-10-19 02:16:51] get_active_evaluation_mode() wywołane
[2025-10-19 02:16:51] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 02:16:51] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 02:16:51] Plik config/business_games_active_mode.json istnieje
[2025-10-19 02:16:51] Z pliku odczytano tryb: 'ai'
[2025-10-19 02:16:51] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 02:16:51] Używam trybu oceny: 'ai'
[2025-10-19 02:16:51] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 02:16:51] Importuję google.generativeai...
[2025-10-19 02:16:51] ✅ Import google.generativeai OK
[2025-10-19 02:16:51] Przygotowuję prompt...
[2025-10-19 02:16:51] ✅ Prompt przygotowany (długość: 2091 znaków)
[2025-10-19 02:16:51] Pobieram API key...
[2025-10-19 02:16:51] ✅ API key pobrane z st.secrets
[2025-10-19 02:16:51] Konfiguruję genai.configure()...
[2025-10-19 02:16:51] ✅ genai.configure() OK
[2025-10-19 02:16:51] Ustawiam safety_settings...
[2025-10-19 02:16:51] ✅ safety_settings ustawione
[2025-10-19 02:16:51] Tworzę model: gemini-2.5-flash...
[2025-10-19 02:16:51] ✅ Model utworzony
[2025-10-19 02:16:51] Wywołuję model.generate_content()...
[2025-10-19 02:17:01] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 02:17:01] Długość odpowiedzi: 985 znaków
[2025-10-19 02:17:01] ✅ JSON sparsowany pomyślnie
[2025-10-19 03:31:38] ============================================================
[2025-10-19 03:31:38] evaluate_contract_solution() wywołane
[2025-10-19 03:31:38] get_active_evaluation_mode() wywołane
[2025-10-19 03:31:38] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 03:31:38] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 03:31:38] Plik config/business_games_active_mode.json istnieje
[2025-10-19 03:31:38] Z pliku odczytano tryb: 'ai'
[2025-10-19 03:31:38] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 03:31:38] Używam trybu oceny: 'ai'
[2025-10-19 03:31:38] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 03:31:38] Importuję google.generativeai...
[2025-10-19 03:31:38] ✅ Import google.generativeai OK
[2025-10-19 03:31:38] Przygotowuję prompt...
[2025-10-19 03:31:38] ✅ Prompt przygotowany (długość: 2221 znaków)
[2025-10-19 03:31:38] Pobieram API key...
[2025-10-19 03:31:38] ✅ API key pobrane z st.secrets
[2025-10-19 03:31:38] Konfiguruję genai.configure()...
[2025-10-19 03:31:38] ✅ genai.configure() OK
[2025-10-19 03:31:38] Ustawiam safety_settings...
[2025-10-19 03:31:38] ✅ safety_settings ustawione
[2025-10-19 03:31:38] Tworzę model: gemini-2.5-flash...
[2025-10-19 03:31:38] ✅ Model utworzony
[2025-10-19 03:31:38] Wywołuję model.generate_content()...
[2025-10-19 03:31:47] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 03:31:47] Długość odpowiedzi: 80 znaków
[2025-10-19 03:31:47] ⚠️ JSON nie kończy się }, próbuję naprawić...
[2025-10-19 03:31:47] Naprawiony JSON: {
  "total_score": 30,
  "rating": 2,
  "feedback": "Rozwiązanie poprawnie ident}
[2025-10-19 03:31:47] ❌ JSONDecodeError: Unterminated string starting at: line 4 column 15 (char 52)
[2025-10-19 03:31:47] Odpowiedź Gemini: {
  "total_score": 30,
  "rating": 2,
  "feedback": "Rozwiązanie poprawnie ident}
[2025-10-19 03:31:47] Fallback do heurystyki (JSONDecodeError)
[2025-10-19 09:30:53] ============================================================
[2025-10-19 09:30:53] evaluate_contract_solution() wywołane
[2025-10-19 09:30:53] get_active_evaluation_mode() wywołane
[2025-10-19 09:30:53] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 09:30:53] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 09:30:53] Plik config/business_games_active_mode.json istnieje
[2025-10-19 09:30:53] Z pliku odczytano tryb: 'ai'
[2025-10-19 09:30:53] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 09:30:53] Używam trybu oceny: 'ai'
[2025-10-19 09:30:53] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 09:30:53] Importuję google.generativeai...
[2025-10-19 09:30:54] ✅ Import google.generativeai OK
[2025-10-19 09:30:54] Przygotowuję prompt...
[2025-10-19 09:30:54] ✅ Prompt przygotowany (długość: 4987 znaków)
[2025-10-19 09:30:54] Pobieram API key...
[2025-10-19 09:30:54] ✅ API key pobrane z st.secrets
[2025-10-19 09:30:54] Konfiguruję genai.configure()...
[2025-10-19 09:30:54] ✅ genai.configure() OK
[2025-10-19 09:30:54] Ustawiam safety_settings...
[2025-10-19 09:30:54] ✅ safety_settings ustawione
[2025-10-19 09:30:54] Tworzę model: gemini-2.5-flash...
[2025-10-19 09:30:54] ✅ Model utworzony
[2025-10-19 09:30:54] Wywołuję model.generate_content()...
[2025-10-19 09:30:59] ============================================================
[2025-10-19 09:30:59] evaluate_contract_solution() wywołane
[2025-10-19 09:30:59] get_active_evaluation_mode() wywołane
[2025-10-19 09:30:59] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 09:30:59] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 09:30:59] Plik config/business_games_active_mode.json istnieje
[2025-10-19 09:30:59] Z pliku odczytano tryb: 'ai'
[2025-10-19 09:30:59] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 09:30:59] Używam trybu oceny: 'ai'
[2025-10-19 09:30:59] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 09:30:59] Importuję google.generativeai...
[2025-10-19 09:30:59] ✅ Import google.generativeai OK
[2025-10-19 09:30:59] Przygotowuję prompt...
[2025-10-19 09:30:59] ✅ Prompt przygotowany (długość: 4095 znaków)
[2025-10-19 09:30:59] Pobieram API key...
[2025-10-19 09:30:59] ✅ API key pobrane z st.secrets
[2025-10-19 09:30:59] Konfiguruję genai.configure()...
[2025-10-19 09:30:59] ✅ genai.configure() OK
[2025-10-19 09:30:59] Ustawiam safety_settings...
[2025-10-19 09:30:59] ✅ safety_settings ustawione
[2025-10-19 09:30:59] Tworzę model: gemini-2.5-flash...
[2025-10-19 09:30:59] ✅ Model utworzony
[2025-10-19 09:30:59] Wywołuję model.generate_content()...
[2025-10-19 09:31:00] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 09:31:00] Długość odpowiedzi: 906 znaków
[2025-10-19 09:31:00] ✅ JSON sparsowany pomyślnie
[2025-10-19 09:31:07] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 09:31:07] Długość odpowiedzi: 675 znaków
[2025-10-19 09:31:07] ✅ JSON sparsowany pomyślnie
[2025-10-19 15:16:58] ============================================================
[2025-10-19 15:16:58] evaluate_contract_solution() wywołane
[2025-10-19 15:16:58] get_active_evaluation_mode() wywołane
[2025-10-19 15:16:58] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 15:16:58] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 15:16:58] Plik config/business_games_active_mode.json istnieje
[2025-10-19 15:16:58] Z pliku odczytano tryb: 'ai'
[2025-10-19 15:16:58] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 15:16:58] Używam trybu oceny: 'ai'
[2025-10-19 15:16:58] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 15:16:58] Importuję google.generativeai...
[2025-10-19 15:16:58] ✅ Import google.generativeai OK
[2025-10-19 15:16:58] Przygotowuję prompt...
[2025-10-19 15:16:58] ✅ Prompt przygotowany (długość: 6744 znaków)
[2025-10-19 15:16:58] Pobieram API key...
[2025-10-19 15:16:58] ✅ API key pobrane z st.secrets
[2025-10-19 15:16:58] Konfiguruję genai.configure()...
[2025-10-19 15:16:58] ✅ genai.configure() OK
[2025-10-19 15:16:58] Ustawiam safety_settings...
[2025-10-19 15:16:58] ✅ safety_settings ustawione
[2025-10-19 15:16:58] Tworzę model: gemini-2.5-flash...
[2025-10-19 15:16:58] ✅ Model utworzony
[2025-10-19 15:16:58] Wywołuję model.generate_content()...
[2025-10-19 15:17:15] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 15:17:27] ❌ Exception: ValueError: Invalid operation: The `response.text` quick accessor requires the response to contain a valid `Part`, but none were returned. The candidate's [finish_reason](https://ai.google.dev/api/generate-content#finishreason) is 2.
[2025-10-19 15:17:27] Fallback do heurystyki (Exception)
[2025-10-19 15:48:48] ============================================================
[2025-10-19 15:48:48] evaluate_contract_solution() wywołane
[2025-10-19 15:48:48] get_active_evaluation_mode() wywołane
[2025-10-19 15:48:48] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 15:48:48] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 15:48:48] Plik config/business_games_active_mode.json istnieje
[2025-10-19 15:48:48] Z pliku odczytano tryb: 'ai'
[2025-10-19 15:48:48] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 15:48:48] Używam trybu oceny: 'ai'
[2025-10-19 15:48:48] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 15:48:48] Importuję google.generativeai...
[2025-10-19 15:48:48] ✅ Import google.generativeai OK
[2025-10-19 15:48:48] Przygotowuję prompt...
[2025-10-19 15:48:48] ✅ Prompt przygotowany (długość: 6744 znaków)
[2025-10-19 15:48:48] Pobieram API key...
[2025-10-19 15:48:48] ✅ API key pobrane z st.secrets
[2025-10-19 15:48:48] Konfiguruję genai.configure()...
[2025-10-19 15:48:48] ✅ genai.configure() OK
[2025-10-19 15:48:48] Ustawiam safety_settings...
[2025-10-19 15:48:48] ✅ safety_settings ustawione
[2025-10-19 15:48:48] Tworzę model: gemini-2.5-flash...
[2025-10-19 15:48:48] ✅ Model utworzony
[2025-10-19 15:48:48] Wywołuję model.generate_content()...
[2025-10-19 15:49:03] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 15:49:03] ⚠️ Odpowiedź zablokowana przez safety settings lub pusta
[2025-10-19 15:49:03] finish_reason: 2
[2025-10-19 15:49:03] Próbuję ponownie BEZ safety settings...
[2025-10-19 15:49:19] ✅ Otrzymano odpowiedź z Gemini (bez safety)
[2025-10-19 15:49:19] Długość odpowiedzi: 870 znaków
[2025-10-19 15:49:19] ⚠️ JSON nie kończy się }, próbuję naprawić...
[2025-10-19 15:49:19] Naprawiony JSON: 
  ],
  "improvements": [
    "Większe podkreślenie roli aktywnego słuchania i zadawania otwartych]}
[2025-10-19 15:49:19] ❌ JSONDecodeError: Unterminated string starting at: line 11 column 5 (char 802)
[2025-10-19 15:49:19] Odpowiedź Gemini: {
  "total_score": 97,
  "rating": 5,
  "feedback": "Rozwiązanie jest wyjątkowo kompleksowe i przemyślane, oferując szczegółowy plan działania w niezwykle trudnej sytuacji. Wykazuje głębokie zrozumienie zarówno aspektów komunikacyjnych, jak i psychologicznych związanych ze zwolnieniami grupowymi, z silnym naciskiem na empatię i odbudowę zaufania.",
  "strengths": [
    "Szczegółowe przygotowanie managerów, w tym warsztaty z symulacjami i zarządzaniem własnymi emocjami, co jest kluczowe w CIQ.",

[2025-10-19 15:49:19] Fallback do heurystyki (JSONDecodeError)
[2025-10-19 16:46:56] ============================================================
[2025-10-19 16:46:56] evaluate_contract_solution() wywołane
[2025-10-19 16:46:56] get_active_evaluation_mode() wywołane
[2025-10-19 16:46:56] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 16:46:56] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 16:46:56] Plik config/business_games_active_mode.json istnieje
[2025-10-19 16:46:56] Z pliku odczytano tryb: 'ai'
[2025-10-19 16:46:56] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 16:46:56] Używam trybu oceny: 'ai'
[2025-10-19 16:46:56] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 16:46:56] Importuję google.generativeai...
[2025-10-19 16:46:56] ✅ Import google.generativeai OK
[2025-10-19 16:46:56] Przygotowuję prompt...
[2025-10-19 16:46:57] ✅ Prompt przygotowany (długość: 6744 znaków)
[2025-10-19 16:46:57] Pobieram API key...
[2025-10-19 16:46:57] ✅ API key pobrane z st.secrets
[2025-10-19 16:46:57] Konfiguruję genai.configure()...
[2025-10-19 16:46:57] ✅ genai.configure() OK
[2025-10-19 16:46:57] Ustawiam safety_settings...
[2025-10-19 16:46:57] ✅ safety_settings ustawione
[2025-10-19 16:46:57] Tworzę model: gemini-2.5-flash...
[2025-10-19 16:46:57] ✅ Model utworzony
[2025-10-19 16:46:57] Wywołuję model.generate_content()...
[2025-10-19 16:47:19] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 16:47:19] Długość odpowiedzi: 1530 znaków
[2025-10-19 16:47:19] ✅ JSON sparsowany pomyślnie
[2025-10-19 17:08:08] ============================================================
[2025-10-19 17:08:08] evaluate_contract_solution() wywołane
[2025-10-19 17:08:08] get_active_evaluation_mode() wywołane
[2025-10-19 17:08:08] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 17:08:08] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 17:08:08] Plik config/business_games_active_mode.json istnieje
[2025-10-19 17:08:09] Z pliku odczytano tryb: 'ai'
[2025-10-19 17:08:09] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 17:08:09] Używam trybu oceny: 'ai'
[2025-10-19 17:08:09] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 17:08:09] Importuję google.generativeai...
[2025-10-19 17:08:09] ✅ Import google.generativeai OK
[2025-10-19 17:08:09] Przygotowuję prompt...
[2025-10-19 17:08:09] ✅ Prompt przygotowany (długość: 2741 znaków)
[2025-10-19 17:08:09] Pobieram API key...
[2025-10-19 17:08:09] ✅ API key pobrane z st.secrets
[2025-10-19 17:08:09] Konfiguruję genai.configure()...
[2025-10-19 17:08:09] ✅ genai.configure() OK
[2025-10-19 17:08:09] Ustawiam safety_settings...
[2025-10-19 17:08:09] ✅ safety_settings ustawione
[2025-10-19 17:08:09] Tworzę model: gemini-2.5-flash...
[2025-10-19 17:08:09] ✅ Model utworzony
[2025-10-19 17:08:09] Wywołuję model.generate_content()...
[2025-10-19 17:08:25] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 17:08:25] Długość odpowiedzi: 1090 znaków
[2025-10-19 17:08:25] ✅ JSON sparsowany pomyślnie
[2025-10-19 22:56:40] ============================================================
[2025-10-19 22:56:40] evaluate_contract_solution() wywołane
[2025-10-19 22:56:40] get_active_evaluation_mode() wywołane
[2025-10-19 22:56:40] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-19 22:56:40] DEFAULT_EVALUATION_MODE = ai
[2025-10-19 22:56:40] Plik config/business_games_active_mode.json istnieje
[2025-10-19 22:56:40] Z pliku odczytano tryb: 'ai'
[2025-10-19 22:56:40] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-19 22:56:40] Używam trybu oceny: 'ai'
[2025-10-19 22:56:40] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-19 22:56:40] Importuję google.generativeai...
[2025-10-19 22:56:40] ✅ Import google.generativeai OK
[2025-10-19 22:56:40] Przygotowuję prompt...
[2025-10-19 22:56:40] ✅ Prompt przygotowany (długość: 3433 znaków)
[2025-10-19 22:56:40] Pobieram API key...
[2025-10-19 22:56:40] ✅ API key pobrane z st.secrets
[2025-10-19 22:56:40] Konfiguruję genai.configure()...
[2025-10-19 22:56:40] ✅ genai.configure() OK
[2025-10-19 22:56:40] Ustawiam safety_settings...
[2025-10-19 22:56:40] ✅ safety_settings ustawione
[2025-10-19 22:56:40] Tworzę model: gemini-2.5-flash...
[2025-10-19 22:56:40] ✅ Model utworzony
[2025-10-19 22:56:40] Wywołuję model.generate_content()...
[2025-10-19 22:56:46] ✅ Otrzymano odpowiedź z Gemini
[2025-10-19 22:56:46] Długość odpowiedzi: 759 znaków
[2025-10-19 22:56:46] ✅ JSON sparsowany pomyślnie
[2025-10-20 12:24:57] ============================================================
[2025-10-20 12:24:57] evaluate_contract_solution() wywołane
[2025-10-20 12:24:57] get_active_evaluation_mode() wywołane
[2025-10-20 12:24:57] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-20 12:24:57] DEFAULT_EVALUATION_MODE = ai
[2025-10-20 12:24:57] Plik config/business_games_active_mode.json istnieje
[2025-10-20 12:24:57] Z pliku odczytano tryb: 'ai'
[2025-10-20 12:24:57] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-20 12:24:57] Używam trybu oceny: 'ai'
[2025-10-20 12:24:57] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-20 12:24:57] Importuję google.generativeai...
[2025-10-20 12:24:57] ✅ Import google.generativeai OK
[2025-10-20 12:24:57] Przygotowuję prompt...
[2025-10-20 12:24:57] ✅ Prompt przygotowany (długość: 2625 znaków)
[2025-10-20 12:24:57] Pobieram API key...
[2025-10-20 12:24:57] ✅ API key pobrane z st.secrets
[2025-10-20 12:24:57] Konfiguruję genai.configure()...
[2025-10-20 12:24:57] ✅ genai.configure() OK
[2025-10-20 12:24:57] Ustawiam safety_settings...
[2025-10-20 12:24:57] ✅ safety_settings ustawione
[2025-10-20 12:24:57] Tworzę model: gemini-2.5-flash...
[2025-10-20 12:24:57] ✅ Model utworzony
[2025-10-20 12:24:57] Wywołuję model.generate_content()...
[2025-10-20 12:25:05] ✅ Otrzymano odpowiedź z Gemini
[2025-10-20 12:25:05] Długość odpowiedzi: 844 znaków
[2025-10-20 12:25:05] ✅ JSON sparsowany pomyślnie
[2025-10-20 13:07:04] ============================================================
[2025-10-20 13:07:04] evaluate_contract_solution() wywołane
[2025-10-20 13:07:04] get_active_evaluation_mode() wywołane
[2025-10-20 13:07:04] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-20 13:07:04] DEFAULT_EVALUATION_MODE = ai
[2025-10-20 13:07:04] Plik config/business_games_active_mode.json istnieje
[2025-10-20 13:07:04] Z pliku odczytano tryb: 'ai'
[2025-10-20 13:07:04] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-20 13:07:04] Używam trybu oceny: 'ai'
[2025-10-20 13:07:04] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-20 13:07:04] Importuję google.generativeai...
[2025-10-20 13:07:04] ✅ Import google.generativeai OK
[2025-10-20 13:07:04] Przygotowuję prompt...
[2025-10-20 13:07:04] ✅ Prompt przygotowany (długość: 3387 znaków)
[2025-10-20 13:07:04] Pobieram API key...
[2025-10-20 13:07:04] ✅ API key pobrane z st.secrets
[2025-10-20 13:07:04] Konfiguruję genai.configure()...
[2025-10-20 13:07:04] ✅ genai.configure() OK
[2025-10-20 13:07:04] Ustawiam safety_settings...
[2025-10-20 13:07:04] ✅ safety_settings ustawione
[2025-10-20 13:07:04] Tworzę model: gemini-2.5-flash...
[2025-10-20 13:07:04] ✅ Model utworzony
[2025-10-20 13:07:04] Wywołuję model.generate_content()...
[2025-10-20 13:07:20] ✅ Otrzymano odpowiedź z Gemini
[2025-10-20 13:07:20] Długość odpowiedzi: 1016 znaków
[2025-10-20 13:07:20] ✅ JSON sparsowany pomyślnie
[2025-10-21 22:10:59] ============================================================
[2025-10-21 22:10:59] evaluate_contract_solution() wywołane
[2025-10-21 22:10:59] get_active_evaluation_mode() wywołane
[2025-10-21 22:10:59] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-21 22:10:59] DEFAULT_EVALUATION_MODE = ai
[2025-10-21 22:10:59] Plik config/business_games_active_mode.json istnieje
[2025-10-21 22:10:59] Z pliku odczytano tryb: 'ai'
[2025-10-21 22:10:59] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-21 22:10:59] Używam trybu oceny: 'ai'
[2025-10-21 22:10:59] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-21 22:10:59] Importuję google.generativeai...
[2025-10-21 22:11:01] ✅ Import google.generativeai OK
[2025-10-21 22:11:01] Przygotowuję prompt...
[2025-10-21 22:11:01] ❌ Exception: KeyError: 'opis'
[2025-10-21 22:11:01] Fallback do Game Master (Exception)
[2025-10-21 22:26:58] ============================================================
[2025-10-21 22:26:58] evaluate_contract_solution() wywołane
[2025-10-21 22:26:58] get_active_evaluation_mode() wywołane
[2025-10-21 22:26:58] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-21 22:26:58] DEFAULT_EVALUATION_MODE = ai
[2025-10-21 22:26:58] Plik config/business_games_active_mode.json istnieje
[2025-10-21 22:26:58] Z pliku odczytano tryb: 'ai'
[2025-10-21 22:26:58] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-21 22:26:58] Używam trybu oceny: 'ai'
[2025-10-21 22:26:58] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-21 22:26:58] Importuję google.generativeai...
[2025-10-21 22:26:58] ✅ Import google.generativeai OK
[2025-10-21 22:26:58] Przygotowuję prompt...
[2025-10-21 22:26:58] ✅ Prompt przygotowany (długość: 3738 znaków)
[2025-10-21 22:26:58] Pobieram API key...
[2025-10-21 22:26:58] ✅ API key pobrane z st.secrets
[2025-10-21 22:26:58] Konfiguruję genai.configure()...
[2025-10-21 22:26:58] ✅ genai.configure() OK
[2025-10-21 22:26:58] Ustawiam safety_settings...
[2025-10-21 22:26:59] ✅ safety_settings ustawione
[2025-10-21 22:26:59] Tworzę model: gemini-2.5-flash...
[2025-10-21 22:26:59] ✅ Model utworzony
[2025-10-21 22:26:59] Wywołuję model.generate_content()...
[2025-10-21 22:27:11] ✅ Otrzymano odpowiedź z Gemini
[2025-10-21 22:27:11] Długość odpowiedzi: 873 znaków
[2025-10-21 22:27:11] ✅ JSON sparsowany pomyślnie
[2025-10-22 00:56:11] ============================================================
[2025-10-22 00:56:11] evaluate_contract_solution() wywołane
[2025-10-22 00:56:11] get_active_evaluation_mode() wywołane
[2025-10-22 00:56:11] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-22 00:56:11] DEFAULT_EVALUATION_MODE = ai
[2025-10-22 00:56:11] Plik config/business_games_active_mode.json istnieje
[2025-10-22 00:56:11] Z pliku odczytano tryb: 'ai'
[2025-10-22 00:56:11] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-22 00:56:11] Używam trybu oceny: 'ai'
[2025-10-22 00:56:11] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-22 00:56:11] Importuję google.generativeai...
[2025-10-22 00:56:11] ✅ Import google.generativeai OK
[2025-10-22 00:56:11] Przygotowuję prompt...
[2025-10-22 00:56:11] ✅ Prompt przygotowany (długość: 3433 znaków)
[2025-10-22 00:56:11] Pobieram API key...
[2025-10-22 00:56:11] ✅ API key pobrane z st.secrets
[2025-10-22 00:56:11] Konfiguruję genai.configure()...
[2025-10-22 00:56:11] ✅ genai.configure() OK
[2025-10-22 00:56:11] Ustawiam safety_settings...
[2025-10-22 00:56:11] ✅ safety_settings ustawione
[2025-10-22 00:56:11] Tworzę model: gemini-2.5-flash...
[2025-10-22 00:56:11] ✅ Model utworzony
[2025-10-22 00:56:11] Wywołuję model.generate_content()...
[2025-10-22 00:56:23] ✅ Otrzymano odpowiedź z Gemini
[2025-10-22 00:56:23] Długość odpowiedzi: 808 znaków
[2025-10-22 00:56:23] ✅ JSON sparsowany pomyślnie
[2025-10-22 01:06:39] ============================================================
[2025-10-22 01:06:39] evaluate_contract_solution() wywołane
[2025-10-22 01:06:39] get_active_evaluation_mode() wywołane
[2025-10-22 01:06:39] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-22 01:06:39] DEFAULT_EVALUATION_MODE = ai
[2025-10-22 01:06:39] Plik config/business_games_active_mode.json istnieje
[2025-10-22 01:06:39] Z pliku odczytano tryb: 'ai'
[2025-10-22 01:06:39] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-22 01:06:39] Używam trybu oceny: 'ai'
[2025-10-22 01:06:39] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-22 01:06:39] Importuję google.generativeai...
[2025-10-22 01:06:39] ✅ Import google.generativeai OK
[2025-10-22 01:06:39] Przygotowuję prompt...
[2025-10-22 01:06:39] ✅ Prompt przygotowany (długość: 2521 znaków)
[2025-10-22 01:06:39] Pobieram API key...
[2025-10-22 01:06:39] ✅ API key pobrane z st.secrets
[2025-10-22 01:06:39] Konfiguruję genai.configure()...
[2025-10-22 01:06:39] ✅ genai.configure() OK
[2025-10-22 01:06:39] Ustawiam safety_settings...
[2025-10-22 01:06:39] ✅ safety_settings ustawione
[2025-10-22 01:06:39] Tworzę model: gemini-2.5-flash...
[2025-10-22 01:06:39] ✅ Model utworzony
[2025-10-22 01:06:39] Wywołuję model.generate_content()...
[2025-10-22 01:06:52] ✅ Otrzymano odpowiedź z Gemini
[2025-10-22 01:06:52] Długość odpowiedzi: 928 znaków
[2025-10-22 01:06:52] ✅ JSON sparsowany pomyślnie
[2025-10-22 10:12:32] ============================================================
[2025-10-22 10:12:32] evaluate_contract_solution() wywołane
[2025-10-22 10:12:32] get_active_evaluation_mode() wywołane
[2025-10-22 10:12:32] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-22 10:12:32] DEFAULT_EVALUATION_MODE = ai
[2025-10-22 10:12:32] Plik config/business_games_active_mode.json istnieje
[2025-10-22 10:12:32] Z pliku odczytano tryb: 'ai'
[2025-10-22 10:12:32] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-22 10:12:32] Używam trybu oceny: 'ai'
[2025-10-22 10:12:32] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-22 10:12:32] Importuję google.generativeai...
[2025-10-22 10:12:32] ✅ Import google.generativeai OK
[2025-10-22 10:12:32] Przygotowuję prompt...
[2025-10-22 10:12:32] ✅ Prompt przygotowany (długość: 2968 znaków)
[2025-10-22 10:12:32] Pobieram API key...
[2025-10-22 10:12:32] ✅ API key pobrane z st.secrets
[2025-10-22 10:12:32] Konfiguruję genai.configure()...
[2025-10-22 10:12:32] ✅ genai.configure() OK
[2025-10-22 10:12:32] Ustawiam safety_settings...
[2025-10-22 10:12:32] ✅ safety_settings ustawione
[2025-10-22 10:12:32] Tworzę model: gemini-2.5-flash...
[2025-10-22 10:12:32] ✅ Model utworzony
[2025-10-22 10:12:32] Wywołuję model.generate_content()...
[2025-10-22 10:12:45] ✅ Otrzymano odpowiedź z Gemini
[2025-10-22 10:12:45] Długość odpowiedzi: 840 znaków
[2025-10-22 10:12:45] ✅ JSON sparsowany pomyślnie
[2025-10-22 10:28:48] ============================================================
[2025-10-22 10:28:48] evaluate_contract_solution() wywołane
[2025-10-22 10:28:48] get_active_evaluation_mode() wywołane
[2025-10-22 10:28:48] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-22 10:28:48] DEFAULT_EVALUATION_MODE = ai
[2025-10-22 10:28:48] Plik config/business_games_active_mode.json istnieje
[2025-10-22 10:28:48] Z pliku odczytano tryb: 'ai'
[2025-10-22 10:28:48] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-22 10:28:48] Używam trybu oceny: 'ai'
[2025-10-22 10:28:48] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-22 10:28:48] Importuję google.generativeai...
[2025-10-22 10:28:48] ✅ Import google.generativeai OK
[2025-10-22 10:28:48] Przygotowuję prompt...
[2025-10-22 10:28:48] ✅ Prompt przygotowany (długość: 2465 znaków)
[2025-10-22 10:28:48] Pobieram API key...
[2025-10-22 10:28:48] ✅ API key pobrane z st.secrets
[2025-10-22 10:28:48] Konfiguruję genai.configure()...
[2025-10-22 10:28:48] ✅ genai.configure() OK
[2025-10-22 10:28:48] Ustawiam safety_settings...
[2025-10-22 10:28:48] ✅ safety_settings ustawione
[2025-10-22 10:28:48] Tworzę model: gemini-2.5-flash...
[2025-10-22 10:28:48] ✅ Model utworzony
[2025-10-22 10:28:48] Wywołuję model.generate_content()...
[2025-10-22 10:29:04] ✅ Otrzymano odpowiedź z Gemini
[2025-10-22 10:29:04] Długość odpowiedzi: 867 znaków
[2025-10-22 10:29:04] ✅ JSON sparsowany pomyślnie
[2025-10-22 13:03:14] ============================================================
[2025-10-22 13:03:14] evaluate_contract_solution() wywołane
[2025-10-22 13:03:14] get_active_evaluation_mode() wywołane
[2025-10-22 13:03:14] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-22 13:03:14] DEFAULT_EVALUATION_MODE = ai
[2025-10-22 13:03:14] Plik config/business_games_active_mode.json istnieje
[2025-10-22 13:03:14] Z pliku odczytano tryb: 'ai'
[2025-10-22 13:03:14] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-22 13:03:14] Używam trybu oceny: 'ai'
[2025-10-22 13:03:14] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-22 13:03:14] Importuję google.generativeai...
[2025-10-22 13:03:14] ✅ Import google.generativeai OK
[2025-10-22 13:03:14] Przygotowuję prompt...
[2025-10-22 13:03:14] ✅ Prompt przygotowany (długość: 2789 znaków)
[2025-10-22 13:03:14] Pobieram API key...
[2025-10-22 13:03:14] ✅ API key pobrane z st.secrets
[2025-10-22 13:03:15] Konfiguruję genai.configure()...
[2025-10-22 13:03:15] ✅ genai.configure() OK
[2025-10-22 13:03:15] Ustawiam safety_settings...
[2025-10-22 13:03:15] ✅ safety_settings ustawione
[2025-10-22 13:03:15] Tworzę model: gemini-2.5-flash...
[2025-10-22 13:03:15] ✅ Model utworzony
[2025-10-22 13:03:15] Wywołuję model.generate_content()...
[2025-10-22 13:03:32] ✅ Otrzymano odpowiedź z Gemini
[2025-10-22 13:03:32] Długość odpowiedzi: 987 znaków
[2025-10-22 13:03:32] ✅ JSON sparsowany pomyślnie
[2025-10-25 00:51:03] ============================================================
[2025-10-25 00:51:03] evaluate_contract_solution() wywołane
[2025-10-25 00:51:03] get_active_evaluation_mode() wywołane
[2025-10-25 00:51:03] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-25 00:51:03] DEFAULT_EVALUATION_MODE = ai
[2025-10-25 00:51:03] Plik config/business_games_active_mode.json istnieje
[2025-10-25 00:51:03] Z pliku odczytano tryb: 'ai'
[2025-10-25 00:51:03] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-25 00:51:03] Używam trybu oceny: 'ai'
[2025-10-25 00:51:03] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-25 00:51:03] Importuję google.generativeai...
[2025-10-25 00:51:03] ✅ Import google.generativeai OK
[2025-10-25 00:51:03] Przygotowuję prompt...
[2025-10-25 00:51:03] ✅ Prompt przygotowany (długość: 2945 znaków)
[2025-10-25 00:51:03] Pobieram API key...
[2025-10-25 00:51:03] ✅ API key pobrane z st.secrets
[2025-10-25 00:51:03] Konfiguruję genai.configure()...
[2025-10-25 00:51:03] ✅ genai.configure() OK
[2025-10-25 00:51:03] Ustawiam safety_settings...
[2025-10-25 00:51:03] ✅ safety_settings ustawione
[2025-10-25 00:51:03] Tworzę model: gemini-2.5-flash...
[2025-10-25 00:51:04] ✅ Model utworzony
[2025-10-25 00:51:04] Wywołuję model.generate_content()...
[2025-10-25 00:51:16] ✅ Otrzymano odpowiedź z Gemini
[2025-10-25 00:51:16] Długość odpowiedzi: 1118 znaków
[2025-10-25 00:51:16] ✅ JSON sparsowany pomyślnie
[2025-10-25 00:51:29] ============================================================
[2025-10-25 00:51:29] evaluate_contract_solution() wywołane
[2025-10-25 00:51:29] get_active_evaluation_mode() wywołane
[2025-10-25 00:51:29] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-25 00:51:29] DEFAULT_EVALUATION_MODE = ai
[2025-10-25 00:51:29] Plik config/business_games_active_mode.json istnieje
[2025-10-25 00:51:29] Z pliku odczytano tryb: 'ai'
[2025-10-25 00:51:29] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-25 00:51:29] Używam trybu oceny: 'ai'
[2025-10-25 00:51:29] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-25 00:51:29] Importuję google.generativeai...
[2025-10-25 00:51:29] ✅ Import google.generativeai OK
[2025-10-25 00:51:29] Przygotowuję prompt...
[2025-10-25 00:51:30] ✅ Prompt przygotowany (długość: 3219 znaków)
[2025-10-25 00:51:30] Pobieram API key...
[2025-10-25 00:51:30] ✅ API key pobrane z st.secrets
[2025-10-25 00:51:30] Konfiguruję genai.configure()...
[2025-10-25 00:51:30] ✅ genai.configure() OK
[2025-10-25 00:51:30] Ustawiam safety_settings...
[2025-10-25 00:51:30] ✅ safety_settings ustawione
[2025-10-25 00:51:30] Tworzę model: gemini-2.5-flash...
[2025-10-25 00:51:30] ✅ Model utworzony
[2025-10-25 00:51:30] Wywołuję model.generate_content()...
[2025-10-25 00:51:42] ✅ Otrzymano odpowiedź z Gemini
[2025-10-25 00:51:42] Długość odpowiedzi: 930 znaków
[2025-10-25 00:51:42] ✅ JSON sparsowany pomyślnie
[2025-10-27 00:26:03] ============================================================
[2025-10-27 00:26:03] evaluate_contract_solution() wywołane
[2025-10-27 00:26:03] get_active_evaluation_mode() wywołane
[2025-10-27 00:26:03] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-27 00:26:03] DEFAULT_EVALUATION_MODE = ai
[2025-10-27 00:26:03] Plik config/business_games_active_mode.json istnieje
[2025-10-27 00:26:03] Z pliku odczytano tryb: 'ai'
[2025-10-27 00:26:03] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-27 00:26:03] Używam trybu oceny: 'ai'
[2025-10-27 00:26:03] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-27 00:26:03] Importuję google.generativeai...
[2025-10-27 00:26:03] ✅ Import google.generativeai OK
[2025-10-27 00:26:03] Przygotowuję prompt...
[2025-10-27 00:26:03] ✅ Prompt przygotowany (długość: 2449 znaków)
[2025-10-27 00:26:03] Pobieram API key...
[2025-10-27 00:26:03] ✅ API key pobrane z st.secrets
[2025-10-27 00:26:03] Konfiguruję genai.configure()...
[2025-10-27 00:26:03] ✅ genai.configure() OK
[2025-10-27 00:26:03] Ustawiam safety_settings...
[2025-10-27 00:26:03] ✅ safety_settings ustawione
[2025-10-27 00:26:03] Tworzę model: gemini-2.5-flash...
[2025-10-27 00:26:03] ✅ Model utworzony
[2025-10-27 00:26:03] Wywołuję model.generate_content()...
[2025-10-27 00:26:13] ✅ Otrzymano odpowiedź z Gemini
[2025-10-27 00:26:13] Długość odpowiedzi: 692 znaków
[2025-10-27 00:26:13] ✅ JSON sparsowany pomyślnie
[2025-10-27 01:47:11] ============================================================
[2025-10-27 01:47:11] evaluate_contract_solution() wywołane
[2025-10-27 01:47:11] get_active_evaluation_mode() wywołane
[2025-10-27 01:47:11] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-27 01:47:11] DEFAULT_EVALUATION_MODE = ai
[2025-10-27 01:47:11] Plik config/business_games_active_mode.json istnieje
[2025-10-27 01:47:11] Z pliku odczytano tryb: 'ai'
[2025-10-27 01:47:11] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-27 01:47:11] Używam trybu oceny: 'ai'
[2025-10-27 01:47:11] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-27 01:47:11] Importuję google.generativeai...
[2025-10-27 01:47:11] ✅ Import google.generativeai OK
[2025-10-27 01:47:11] Przygotowuję prompt...
[2025-10-27 01:47:11] ✅ Prompt przygotowany (długość: 2449 znaków)
[2025-10-27 01:47:11] Pobieram API key...
[2025-10-27 01:47:11] ✅ API key pobrane z st.secrets
[2025-10-27 01:47:11] Konfiguruję genai.configure()...
[2025-10-27 01:47:11] ✅ genai.configure() OK
[2025-10-27 01:47:11] Ustawiam safety_settings...
[2025-10-27 01:47:11] ✅ safety_settings ustawione
[2025-10-27 01:47:11] Tworzę model: gemini-2.5-flash...
[2025-10-27 01:47:11] ✅ Model utworzony
[2025-10-27 01:47:11] Wywołuję model.generate_content()...
[2025-10-27 01:47:20] ✅ Otrzymano odpowiedź z Gemini
[2025-10-27 01:47:20] Długość odpowiedzi: 774 znaków
[2025-10-27 01:47:20] ✅ JSON sparsowany pomyślnie
[2025-10-27 02:06:46] ============================================================
[2025-10-27 02:06:46] evaluate_contract_solution() wywołane
[2025-10-27 02:06:46] get_active_evaluation_mode() wywołane
[2025-10-27 02:06:46] SETTINGS_FILE = config/business_games_active_mode.json
[2025-10-27 02:06:46] DEFAULT_EVALUATION_MODE = ai
[2025-10-27 02:06:46] Plik config/business_games_active_mode.json istnieje
[2025-10-27 02:06:46] Z pliku odczytano tryb: 'ai'
[2025-10-27 02:06:46] get_active_evaluation_mode() zwróciło: 'ai'
[2025-10-27 02:06:46] Używam trybu oceny: 'ai'
[2025-10-27 02:06:46] 🤖 evaluate_with_ai() ROZPOCZĘTA
[2025-10-27 02:06:46] Importuję google.generativeai...
[2025-10-27 02:06:46] ✅ Import google.generativeai OK
[2025-10-27 02:06:46] Przygotowuję prompt...
[2025-10-27 02:06:46] ✅ Prompt przygotowany (długość: 2540 znaków)
[2025-10-27 02:06:46] Pobieram API key...
[2025-10-27 02:06:46] ✅ API key pobrane z st.secrets
[2025-10-27 02:06:46] Konfiguruję genai.configure()...
[2025-10-27 02:06:46] ✅ genai.configure() OK
[2025-10-27 02:06:46] Ustawiam safety_settings...
[2025-10-27 02:06:46] ✅ safety_settings ustawione
[2025-10-27 02:06:46] Tworzę model: gemini-2.5-flash...
[2025-10-27 02:06:46] ✅ Model utworzony
[2025-10-27 02:06:46] Wywołuję model.generate_content()...
[2025-10-27 02:06:58] ✅ Otrzymano odpowiedź z Gemini
[2025-10-27 02:06:58] Długość odpowiedzi: 931 znaków
[2025-10-27 02:06:58] ✅ JSON sparsowany pomyślnie
